原码、反码和补码

我们先拿 8 比特来表达一个整数来举例：
+3：0000 0011（原码）
-3：1000 0011（原码）
5 + 3 = 8
  0000 0101
+ 0000 0011
———————————
  0000 1000

错误例子：
5 - 3 = 5 + (-3) = -8
  0000 0101
+ 1000 0011
———————————
  1000 1000
  
原码转补码：
原码转反码，再由反码转补码（反之亦然）。
原码：不动
反码：原码的基础上，把非符号位全部反转（相当于位取反运算）。
补码：反码的基础上，+ 1 就可以了。

-3：
1000 0011（原码）
1111 1100（反码）
1111 1101（补码）
正确示例：
5 - 3 = 5 + (-3) = 2
  0000 0101
+ 1111 1101
———————————
  0000 0010（截断，Truncate）
  
补码的意义：为了保证我们取的数字有效，
加法和减法都可以使用同一种运算操作来处理数据。

~3 = -4
~ 0000 0011（补码）
———————————
  1111 1100（补码）
  1111 1011（反码）
  1000 0100（原码）
  -     4